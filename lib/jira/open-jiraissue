#!/usr/bin/env bash

# Environment setup
set -o pipefail
[[ ${DEBUG-} ]] && set -o xtrace
SCRIPT_DIR="$(cd "${BASH_SOURCE[0]%/*}" || exit 1; pwd)"
[[ ":${PATH}:" != *:"${SCRIPT_DIR}":* ]] && export PATH="${SCRIPT_DIR}:${PATH}"
source "${SCRIPT_DIR}/../../bash_modules/terminal.sh"
[[ -z ${BASH_MODULES_DIR-} ]] && echo "ERROR: terminal.sh module missing" && exit 1
source "${BASH_MODULES_DIR}/settings.sh"

function print_usage() {
  cat <<EOF
Usage: $(basename "$0") [ISSUE-KEY] [options]

Open Jira issues in browser or get URLs

Dependencies:
  jira                   The jira CLI tool

Optional arguments:
  ISSUE-KEY              Issue key to open (e.g., GCP-479)
                        If not provided, opens project page
  --no-browser           Get URL without opening browser
  -h, --help             Show this help message and exit

Examples:
  $(basename "$0")                    # Open project page in browser
  $(basename "$0") GCP-479            # Open specific issue
  $(basename "$0") GCP-479 --no-browser  # Get issue URL only
EOF
}

function ctrlc_trap() {
  log_newline
  log_warning "Script interrupted. Exiting."
  exit 130
}
trap ctrlc_trap SIGINT

# Parse arguments
declare issue_key=""
declare no_browser=""

while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help)
      print_usage
      exit 0
      ;;
    --no-browser)
      no_browser="--no-browser"
      shift
      ;;
    -*)
      log_error "Unknown option: $1"
      print_usage
      exit 1
      ;;
    *)
      if [[ -z "${issue_key}" ]]; then
        issue_key="$1"
      else
        log_error "Multiple issue keys provided"
        print_usage
        exit 1
      fi
      shift
      ;;
  esac
done

# Title and Dependency Checks
log_title "Open Jira Issue in Browser"

dependencies=(jira)
for cmd in "${dependencies[@]}"; do
    if ! command -v "${cmd}" >/dev/null; then
        log_error "ERROR: Missing dependency - '${cmd}'"
        exit 1
    fi
done

# Get project setting
jira_project=$(settings_get "JIRA_DEFAULT_PROJECT")

# Build command
cmd=(jira open)
if [[ -n "${issue_key}" ]]; then
  cmd+=("${issue_key}")
  log_heading "Opening Issue: ${issue_key}"
else
  log_heading "Opening Project: ${jira_project}"
fi

if [[ -n "${no_browser}" ]]; then
  cmd+=("${no_browser}")
fi

if [[ -n "${jira_project}" ]]; then
  cmd+=("--project" "${jira_project}")
fi

# Main Logic
log_message "Executing: ${cmd[*]}"

if "${cmd[@]}"; then
  if [[ -n "${no_browser}" ]]; then
    log_success "URL retrieved successfully"
  else
    log_success "Opened in browser successfully"
  fi
else
  log_failure "Failed to open"
  exit 1
fi