#!/usr/bin/env bash

# Environment setup
# -----------------------------------------------------------------------------
set -o pipefail
[[ ${DEBUG-} ]] && set -o xtrace
SCRIPT_DIR="$(cd "${BASH_SOURCE[0]%/*}" || exit 1; pwd)"
[[ ":${PATH}:" != *:"${SCRIPT_DIR}":* ]] && export PATH="${SCRIPT_DIR}:${PATH}"
source "${SCRIPT_DIR}/bash_modules/terminal.sh"
[[ -z ${BASH_MODULES_DIR-} ]] && echo "ERROR: terminal.sh module missing" && exit 1

function print_usage() {
  cat <<EOF
Usage: $(basename "$0") [-h|--help]

Backup configuration files to ai/config/

This script copies:
  - ~/ENVIRONMENT.md to ai/config/
  - ~/.claude/settings.json to ai/config/claude-code/
  - ~/.claude/commands/ to ai/config/claude-code/commands/
  - ~/.claude/agents/ to ai/config/claude-code/agents/

Non-existent files or directories are skipped without error.

Optional arguments:
  -h, --help         Show this help message and exit
EOF
}
if [[ "${1-}" == "-h" || "${1-}" == "--help" ]]; then
  print_usage
  exit 0
fi

function ctrlc_trap() {
  log_newline
  log_warning "Script interrupted. Exiting."
  exit 130
}
trap ctrlc_trap SIGINT

# Title and Setup
# -----------------------------------------------------------------------------
log_title "Configuration Backup"

declare -r CLAUDE_SOURCE_DIR="${HOME}/.claude"
declare -r CLAUDE_TARGET_DIR="${SCRIPT_DIR}/ai/config/claude-code"
declare -r CONFIG_TARGET_DIR="${SCRIPT_DIR}/ai/config"

# Create target directories if they don't exist
if ! mkdir -p "${CLAUDE_TARGET_DIR}" "${CONFIG_TARGET_DIR}"; then
  log_error "Failed to create target directories"
  exit 1
fi

log_heading "Backup Configuration"
log_message "Config Target: '${CONFIG_TARGET_DIR}'"
log_message "Claude Source: '${CLAUDE_SOURCE_DIR}'"
log_message "Claude Target: '${CLAUDE_TARGET_DIR}'"

# Backup ENVIRONMENT.md
# -----------------------------------------------------------------------------
log_subheading "Environment File"
if [[ -f "${HOME}/ENVIRONMENT.md" ]]; then
  if rsync -a "${HOME}/ENVIRONMENT.md" "${CONFIG_TARGET_DIR}/"; then
    log_success "ENVIRONMENT.md backed up"
  else
    log_failure "Failed to backup ENVIRONMENT.md"
    exit 1
  fi
else
  log_warning "ENVIRONMENT.md not found, skipping"
fi

# Backup settings.json
# -----------------------------------------------------------------------------
log_subheading "Settings File"
if [[ -f "${CLAUDE_SOURCE_DIR}/settings.json" ]]; then
  if rsync -a "${CLAUDE_SOURCE_DIR}/settings.json" "${CLAUDE_TARGET_DIR}/"; then
    log_success "settings.json backed up"
  else
    log_failure "Failed to backup settings.json"
    exit 1
  fi
else
  log_warning "settings.json not found, skipping"
fi

# Backup commands directory
# -----------------------------------------------------------------------------
log_subheading "Commands Directory"
if [[ -d "${CLAUDE_SOURCE_DIR}/commands" ]]; then
  if rsync -a "${CLAUDE_SOURCE_DIR}/commands/" "${CLAUDE_TARGET_DIR}/commands/"; then
    log_success "commands directory backed up"
  else
    log_failure "Failed to backup commands directory"
    exit 1
  fi
else
  log_warning "commands directory not found, skipping"
fi

# Backup agents directory
# -----------------------------------------------------------------------------
log_subheading "Agents Directory"
if [[ -d "${CLAUDE_SOURCE_DIR}/agents" ]]; then
  if rsync -a "${CLAUDE_SOURCE_DIR}/agents/" "${CLAUDE_TARGET_DIR}/agents/"; then
    log_success "agents directory backed up"
  else
    log_failure "Failed to backup agents directory"
    exit 1
  fi
else
  log_warning "agents directory not found, skipping"
fi

log_done "Configuration backup completed"
