#!/usr/bin/env bash

# Environment setup
set -o pipefail # set -e hides errors, don't use it
SCRIPT_DIR="$(cd "${BASH_SOURCE[0]%/*}" || exit 1; pwd)"
export PATH="${PATH}:${SCRIPT_DIR}"

source "${SCRIPT_DIR}/bash_modules/terminal.sh"
source "${SCRIPT_DIR}/bash_modules/user_input.sh"
source "${SCRIPT_DIR}/bash_modules/desktop.sh"

function print_usage() {
  cat <<EOF
Usage: . set-path [-h]

Adds lib script paths to the PATH environment variable

This script is required to be sourced

Optional arguments:
  -h, --help         Show this help message and exit
EOF
}

if [[ $# -gt 2 || "${1}" == "-h" || "${1}" == "--help" ]]; then
  print_usage
  exit 1
fi

log_title "Set Path Environment Variable"
sourced=true
if ! (return 0 2>/dev/null); then
  sourced=false
fi


# shellcheck disable=SC2034
readarray -t lib_directories < <(find "${SCRIPT_DIR}/lib" -mindepth 1 -maxdepth 1 -type d -exec basename {} \;)
selected_directory="$(numbered_choice_menu lib_directories)"
path_to_add="${SCRIPT_DIR}/lib/${selected_directory}"

if [[ ${sourced} == "true" ]]; then
  log_message "Adding '${path_to_add}' to PATH"
  PATH="${PATH}:${path_to_add}"
  export PATH
  return
fi

log_line
echo "${BOLD}${YELLOW}The 'set-path' script has not been sourced.${NORMAL}"
echo "${BOLD}${YELLOW}The PATH environment variable has not been set.${NORMAL}"
echo "${BOLD}${YELLOW}The below statement has been copied to your clipboard.${NORMAL}"
log_line

# shellcheck disable=SC2016
export_statement='export PATH="${PATH}:'"${path_to_add}"
echo "${export_statement}"
send_to_clipboard "${export_statement}"
